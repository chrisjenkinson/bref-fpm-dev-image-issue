# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run:
    strategy:
      matrix:
        image: 
          - "php:8.1.19"
          - "bref/php-80:2"
          - "bref/php-80-fpm:2"
          - "bref/php-80-console:2"
          - "bref/build-php-80:2"
          - "bref/php-80-fpm-dev:2"
          - "bref/php-81:2"
          - "bref/php-81-fpm:2"
          - "bref/php-81-console:2"
          - "bref/build-php-81:2"
          - "bref/php-81-fpm-dev:2"
          - "bref/php-82:2"
          - "bref/php-82-fpm:2"
          - "bref/php-82-console:2"
          - "bref/build-php-82:2"
          - "bref/php-82-fpm-dev:2"
    runs-on: ubuntu-latest
    steps:
      - name: Install symfony skeleton
        run: |
          docker run --rm -v `pwd`:/project -w /project composer create-project symfony/skeleton:"6.1.*" project
          docker run --rm -v `pwd`/project:/project -w /project composer require "php:8.0.*" --ignore-platform-reqs
      - name: Install phpstan
        run: |
          docker run --rm -v `pwd`/project:/project -w /project composer require --dev phpstan/phpstan:1.10.15 --ignore-platform-reqs
      - name: Run phpstan
        run: |
          docker run --rm -v `pwd`/project:/project -w /project ${{ matrix.image }} vendor/bin/phpstan analyse src --debug -vvv
